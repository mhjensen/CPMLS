TITLE: Master program in Computational Science
AUTHOR: University of Oslo
DATE: Board Meeting February 4, 2019



!split
===== Agenda February 4, 2019, 830am-10am =====
!bblock


o Approval of "minutes from last meeting (Dec 13, 2018)":"https://github.com/mhjensen/CPMLS/blob/gh-pages/doc/src/MSCMeetings/Minutes/CPMPLSDec1318.txt"
o Discussion of common rules for our students across departments, see note from Andreas Austeng
o Discussion of rules for internal examiners
o How do we determine topics for MSc theses?
o Other issues with rules for our students
o AOB

!eblock

!split
===== Common rules for our students across departments, how do we build a multidisciplinary program and what does it mean? =====

We all agreed to preserve  a local autonomy, students from each study option are enlisted at the department where the study option belongs. 

Our program is however a multidisciplinary one, with learning outcomes
and thesis topics which may not be familiar to faculty at a given
department.  Furthermore, since this is a cross-department program, we
need to make sure that students in this program feel they are treated
equally, or as far as this is possible.

We need thus to strike a balance between the _autonomy_ of the given
department and study option and the needs and learning outcomes of our
program.  And the wishes of our students. 


_Andreas Austeng_ has in the  document that was emailed to all tried to develop possible scenarios for issues like extensions of deadlines etc.
We will discuss this first. 


!split
===== Proposal from three education leaders at IFI, Physics and Chemistry (text in Norwegian only, sorry for that) =====


o _Prosjektbeskrivelse for masteroppgaven må være i tråd med navn og beskrivelse av den aktuelle studieretningen. Det er positivt med tverrfaglige oppgaver på tvers av CS-retningene, så lenge oppgaven fortsatt har tilstrekkelig faglig innslag også fra studieretningen studenten har opptak på_.

o For teoretisk pensum har CS definert tre emner hvorav alle studentene må ta minst to. Helheten i valg av prosjekt og emner må tilfredsstille det definerte læringsutbyttet for CS-programmet, samt navn og beskrivelse av den aktuelle studieretningen. Det må også gjerne inngå tverrfaglige emner i tråd med gjeldende reglement.

o Studenten må ha minst en veileder tilknyttet (ansatt ved) den aktuelle studieretningen. Denne veilederen har ansvaret for at det faglige innholdet i prosjekt og teoretisk pensum er i tråd med punkt 1 og 2.

o Teoretisk pensum, inkludert eventuelt spesialpensum, godkjennes av instituttet ansvarlig for studieretningen.

o _Intern og ekstern sensor oppnevnes av instituttet ansvarlig for studieretningen, i tråd med instituttets vanlige rutiner_

o Hvis en student ønsker å bytte studieretning, må det søkes nytt opptak på vanlig måte (eller studenten kan velge en tverrfaglig oppgave/emner i tråd med punkt 1 og 2).

!split 
===== Internal examiners and advisors =====

_Proposal to be added to MN-fak rules_

Where possible the internal examiners could come from the same department where the study option resides. However, due to often lacking competences in particular with respect to the specific learning outcomes, we would like to add that internal examiners do not need to come from the same department where the study option resides and where the student is enlisted. Internal examiners could come from a pool of CS competent scientists with knowledge of the central fields covered by the program and its learning outcomes. The latter may not be reflected in the competences of scientists at a specific department. 

!split
===== Learning outcomes specific to our program (not reflected in standard disciplinary programs) =====

See our learning outcomes at URL:"https://www.uio.no/english/studies/programmes/computational-science-master/learning-outcomes/".

=== Knowledge ===
You have gained a deep knowledge of the scientific method and computational science at an advanced level, meaning that you:
* have theoretical and practical knowledge of a wide range of computational methods and mathematical algorithms, including principles for developing and generalizing such methods and algorithms
* understand how to apply computational methods to extract information from experimental data and solve scientific problems
understand the limitations of numerical methods, including approximation errors, round-off errors and the constraints on the applicability of specific algorithms
* You understand the possibilities and limits of computational modeling, meaning that you:
can transform scientific problems into generic computational models and understand how various error sources influence the accuracy and reliability of the models and the computed results
* have an overview of advanced algorithms for solving a wide range of problems and how they can be accessed in available software
=== Skills ===
You have developed a practical mastery of computing, including the interplay between scientific problems and data, mathematical models, generic algorithms and reusable software, meaning that you:
* are able to analyze and visualize computed results and evaluate their relevance with respect to the underlying problems and/or hypotheses
* have a working understanding of high-performance computing elements including memory usage, vectorization and parallel algorithms, and related software tools like debuggers, test frameworks, scripts, and version control systems
* can program in high-level and compiled languages and make efficient use of a computer algebra system
* understand how to increase the efficiency of numerical algorithms and pertinent software
* and you are familiar with techniques for collaborative software development
=== General competence ===
You have developed a fundamental understanding and knowledge of scientific work and the scientific method, including ethical and societal limitations and possibilities. This means among other things that you:
* can develop hypotheses and suggest ways to test these using relevant analytical, experimental and numerical tools
* can reflect on and develop strategies and tools to make science reproducible and have a sound ethical approach to scientific problems
* you can communicate in a professional way scientific problems, results and uncertainties, orally and in written form
* you have developed a sound, scientific intuition and can reflect over and develop efficient and personal learning strategies
* you can work independently but also in close collaboration with others to complete a research project on time

!split 
===== Internal examiners, criteria for discussion  =====

Internal examiners can be  chosen by the program board to follow the following disciplinary topics (in addition to the specific study options)
as well as having competences in software development. An internal examiner 
o Machine learning and possibly AI (all study options)
o Statistics and data analysis (all study options)
o Differential equations (partial and ordinary, applies to all study options)
o Software development (all study options)
o Computational quantum mechanics (physics, chemistry, and materials science)
o Computational statistical mechanics (physics, chemistry and material science)
o Computational Life Science (most study options)
o Computational Geoscience
o Computational Astrophysics
o Bioinformatics
o Stochastic simulations (most study options)

Too many? Missing topics? too generic or too specific? 

!split
===== Thesis topics =====

Furthermore, we will encounter (five this year) situations
where students may opt for external advisors and thesis topics which
do not fall into the thematics of a given study option. We need to
discuss these issues as well and make sure that our rules are flexible
enough to allow for such cases.

Proposal: 
o Strive as far as possible to allow for thesis topics which may not match (partly or fully) the scientific profile of a given study option. 


!split
===== Other issues with rules for our students =====

Discussion of other points in the letter from the education deans. 








